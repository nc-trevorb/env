# rebind prefix
unbind C-b
set -g prefix C-q

# set -g default-shell $SHELL
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# split panes
bind - split-window -c "#{pane_current_path}"
bind _ split-window -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# start new windows in current directory
bind c new-window -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
unbind h
unbind n
unbind e
unbind i
bind h select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R

# can keep control key held down
bind C-h select-pane -L
bind C-n select-pane -D
bind C-e select-pane -U
bind C-i select-pane -R

# vim-like bindings for resizing panes
unbind L
bind -r H resize-pane -L 5
bind -r N resize-pane -D 5
bind -r E resize-pane -U 5
bind -r I resize-pane -R 5

# vim-style controls for copy mode
setw -g mode-keys vi
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION SSH_AUTH_SOCK"

# copy to clipboard in copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

set-option -g status-style bg=colour8,fg=white

# [ battery ] [ date/time ]
# linux
# set -g status-right "#[fg=white bg=black]#(acpi | awk -F, '{print $2}') #[bg=default] #[bg=black] %a, %b %d #[bg=default] #[bg=black] %I:%M %p #[default]#[fg=colour245]  "

# macos
set -g status-right " #[fg=red][#[fg=white] #(pmset -g batt | tr '\t' '\n' | sed -e '3!d' -e 's/;.*//') #[fg=red]]#[default] #[fg=red][#[fg=white] %a, %b %d -- %I:%M %p #[fg=red]]#[default] "

# openbsd
# set -g status-right " #[fg=red][#[fg=white] #(pmset -g batt | tr '\t' '\n' | sed -e '3!d' -e 's/;.*//') #[fg=red]]#[default] #[fg=red][#[fg=white] %a, %b %d -- %I:%M %p #[fg=red]]#[default] "

set-window-option -g window-status-format ' #I  #W '
set-window-option -g window-status-style fg=white

set-window-option -g window-status-current-format ' #[bg=default,underscore]#I  #W#[default] '
set-window-option -g window-status-current-style fg=colour196

set -g pane-active-border-style fg=colour196

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal "screen-256color"
# NOTE: the above works best with iTerm2, Profiles->Terminal, terminal type=xterm-256color
# NOTE: the above will break colors on OSX Terminal since it is only 8 colors.
#       you can comment it out to use tmux with it.

set -g base-index 1 # start window numbering at 1
set -g pane-base-index 1 # start pane numbering at 1
set -g history-limit 10000
set -s escape-time 0
set-option -g status-keys emacs

# reload tmux config file
bind C-r source ~/.tmux.conf \; display-message 'reloaded conf'

# restart haskell repl
bind R send-keys ':q' 'Enter' \; run-shell 'sleep 0.2' \; send-keys 'Up' 'Enter'

unbind d # disable session detaching
unbind Escape # disable escape (to copy mode)

# switches to last selected window
bind C-o last-window

# disable suspend tmux
unbind C-z
bind C-z resize-pane -Z

# run previous command in last pane
unbind C-t
bind C-t last-pane \; send-keys C-l 'Up' 'Enter' \; last-pane

unbind C-f
bind C-f last-pane

unbind s
bind s copy-mode

unbind p
bind p paste-buffer

unbind x
unbind f

bind ! select-window -t 1
bind @ select-window -t 2
bind '#' select-window -t 3
bind '$' select-window -t 4
bind % select-window -t 5
bind ^ select-window -t 6
bind & select-window -t 7
bind * select-window -t 8
bind ( select-window -t 9

bind b select-pane -t 3 \; send-keys C-l C-e C-u 'run once' \; run-shell 'sleep 0.2' \; send-keys 'Enter' \; select-pane -t 1
bind w select-pane -t 3 \; send-keys C-l C-e C-u 'run once' \; run-shell 'sleep 0.2' \; send-keys 'Enter' \; select-pane -t 1
bind C-b select-pane -t 3 \; send-keys C-l C-e C-u 'run once' \; run-shell 'sleep 0.2' \; send-keys 'Enter' \; select-pane -t 1


bind C-v send-keys C-x C-v # copy emacs region
bind C-y paste-buffer -b emacsclip
